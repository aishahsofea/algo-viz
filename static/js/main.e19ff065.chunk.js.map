{"version":3,"sources":["components/Subgrid/Subgrid.jsx","components/Grid/Grid.jsx","components/VizButton/VizButton.jsx","viz/LangstonsAnt.jsx","layout/VizAppBar.jsx","views/View.jsx","App.js","index.js"],"names":["Subgrid","props","handleClick","x","y","handleAnt","renderAnt","xlinkHref","height","width","preserveAspectRatio","state","fill","handleFlip","bind","this","currGrid","direction","setState","prevProps","visualizing","clickCount","console","log","stroke","strokeWidth","strokeOpacity","onClick","React","Grid","location","handleCurrGrid","renderSubgrids","position","h","w","push","arr1","arr2","map","k","i","pos","ind","key","xmlns","VizButton","handleViz","label","Button","variant","color","LangstonsAnt","handleNextStep","forward","handleDirection","handleBoundaries","gridSize","handleMove","nextStep","componentDidUpdate","timeOut","setInterval","clearInterval","Component","handleWidth","e","val","target","value","handleHeight","classes","AppBar","Toolbar","Card","className","root","CardActionArea","CardContent","Typography","align","TextField","id","type","defaultValue","onChange","field","VizAppBar","withStyles","backgroundColor","maxWidth","marginRight","View","handleVisualize","isVisualizing","gridWidth","gridHeight","handleSize","handleGridSize","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e19ff065.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nexport class Subgrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fill: \"white\",\r\n    };\r\n    this.handleFlip = this.handleFlip.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.renderAnt = this.renderAnt.bind(this);\r\n  }\r\n\r\n  handleFlip() {\r\n    const { x, y, currGrid } = this.props;\r\n    if (x === currGrid[0] && y === currGrid[1]) {\r\n      this.props.direction(this.state.fill);\r\n      this.setState({\r\n        fill: this.state.fill === \"white\" ? \"green\" : \"white\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { x, y } = this.props;\r\n    this.props.handleAnt([x, y]);\r\n  };\r\n\r\n  renderAnt = () => {\r\n    const { x, y } = this.props;\r\n    return (\r\n      <image\r\n        xlinkHref=\"https://image.flaticon.com/icons/svg/47/47288.svg\"\r\n        x={x * 15}\r\n        y={y * 15}\r\n        height={15}\r\n        width={15}\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n      />\r\n    );\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { visualizing, clickCount } = this.props;\r\n    if (this.props.currGrid !== prevProps.currGrid) {\r\n      if (visualizing) {\r\n        this.handleFlip();\r\n      }\r\n    } else if (this.props.visualizing !== prevProps.visualizing) {\r\n      if (visualizing && clickCount <= 1) {\r\n        console.log(\"visualizing changed\");\r\n        this.handleFlip();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { x, y, currGrid } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <rect\r\n          x={x * 15}\r\n          y={y * 15}\r\n          width={15}\r\n          height={15}\r\n          fill={this.state.fill}\r\n          stroke={\"black\"}\r\n          strokeWidth={1}\r\n          strokeOpacity={0.3}\r\n          onClick={this.handleClick}\r\n        />\r\n        {currGrid && currGrid[0] === x && currGrid[1] === y\r\n          ? this.renderAnt()\r\n          : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Subgrid } from \"../Subgrid\";\r\n\r\nexport class Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderSubgrids = this.renderSubgrids.bind(this);\r\n    this.handleAnt = this.handleAnt.bind(this);\r\n  }\r\n\r\n  renderSubgrids(height, width) {\r\n    const position = { x: [], y: [] };\r\n    for (let h = 0; h < height; h++) {\r\n      for (let w = 0; w < width; w++) {\r\n        position.x.push(w);\r\n        position.y.push(h);\r\n      }\r\n    }\r\n\r\n    const zip = (arr1, arr2) => arr1.map((k, i) => [k, arr2[i]]);\r\n    const zippedPosition = zip(position.x, position.y);\r\n    const subgrids = zippedPosition.map((pos, ind) => (\r\n      <Subgrid\r\n        key={ind}\r\n        x={pos[0]}\r\n        y={pos[1]}\r\n        currGrid={this.props.currGrid}\r\n        direction={this.props.direction}\r\n        handleAnt={this.handleAnt}\r\n        visualizing={this.props.visualizing}\r\n        clickCount={this.props.clickCount}\r\n      />\r\n    ));\r\n\r\n    return subgrids;\r\n  }\r\n\r\n  handleAnt = (location) => {\r\n    this.props.handleCurrGrid(location);\r\n  };\r\n\r\n  render() {\r\n    const { height, width } = this.props;\r\n    return (\r\n      <div>\r\n        <svg\r\n          height={height * 15}\r\n          width={width * 15}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          {this.renderSubgrids(height, width)}\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport class VizButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      label: this.props.label ? \"stop\" : \"visualize\",\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.handleViz();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={this.handleClick}\r\n        color={this.state.color}\r\n      >\r\n        {this.props.visualizing ? \"stop\" : \"visualize\"}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Grid } from \"../components\";\r\n\r\nexport class LangstonsAnt extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currGrid: null,\r\n      direction: \"north\",\r\n    };\r\n    this.handleNextStep = this.handleNextStep.bind(this);\r\n    this.handleDirection = this.handleDirection.bind(this);\r\n    this.handleBoundaries = this.handleBoundaries.bind(this);\r\n    this.handleMove = this.handleMove.bind(this);\r\n    this.handleCurrGrid = this.handleCurrGrid.bind(this);\r\n    this.timeOut = 0;\r\n  }\r\n\r\n  handleNextStep = () => {\r\n    const direction = this.state.direction;\r\n    const x = this.state.currGrid[0];\r\n    const y = this.state.currGrid[1];\r\n    let forward;\r\n    switch (direction) {\r\n      case \"north\":\r\n        forward = [x, y - 1];\r\n        break;\r\n      case \"east\":\r\n        forward = [x + 1, y];\r\n        break;\r\n      case \"south\":\r\n        forward = [x, y + 1];\r\n        break;\r\n      case \"west\":\r\n        forward = [x - 1, y];\r\n        break;\r\n      default:\r\n    }\r\n    return forward;\r\n  };\r\n\r\n  handleDirection = (color) => {\r\n    const direction = this.state.direction;\r\n    switch (direction) {\r\n      case \"north\":\r\n        this.setState({\r\n          direction: color === \"white\" ? \"east\" : \"west\",\r\n        });\r\n        break;\r\n      case \"east\":\r\n        this.setState({\r\n          direction: color === \"white\" ? \"south\" : \"north\",\r\n        });\r\n        break;\r\n      case \"south\":\r\n        this.setState({\r\n          direction: color === \"white\" ? \"west\" : \"east\",\r\n        });\r\n        break;\r\n      case \"west\":\r\n        this.setState({\r\n          direction: color === \"white\" ? \"north\" : \"south\",\r\n        });\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  handleBoundaries = (currGrid) => {\r\n    const { gridSize } = this.props;\r\n    const x = currGrid[0];\r\n    const y = currGrid[1];\r\n\r\n    if (x >= gridSize[0] || x < 0) {\r\n      return false;\r\n    }\r\n\r\n    if (y >= gridSize[1] || y < 0) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  handleMove = () => {\r\n    const nextStep = this.handleNextStep();\r\n    if (this.handleBoundaries(nextStep)) {\r\n      this.setState({\r\n        currGrid: nextStep,\r\n      });\r\n    } else {\r\n      this.props.handleViz();\r\n    }\r\n  };\r\n\r\n  handleCurrGrid = (location) => {\r\n    this.setState({\r\n      currGrid: location,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (this.props.visualizing !== prevProps.visualizing) {\r\n      if (this.props.visualizing) {\r\n        this.timeOut = setInterval(this.handleMove, 10);\r\n      } else {\r\n        clearInterval(this.timeOut);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { gridSize, visualizing, clickCount } = this.props;\r\n    const width = gridSize[0];\r\n    const height = gridSize[1];\r\n    return (\r\n      <React.Fragment>\r\n        {\"Click on the grid to place the ant\"}\r\n        <Grid\r\n          width={width}\r\n          height={height}\r\n          currGrid={this.state.currGrid}\r\n          direction={this.handleDirection}\r\n          handleCurrGrid={this.handleCurrGrid}\r\n          visualizing={visualizing}\r\n          clickCount={clickCount}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as React from \"react\";\r\nimport { VizButton } from \"../components\";\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  },\r\n  field: {\r\n    maxWidth: 50,\r\n    marginRight: \"10px\",\r\n  },\r\n};\r\n\r\nclass Component extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleWidth = this.handleWidth.bind(this);\r\n    this.handleHeight = this.handleHeight.bind(this);\r\n  }\r\n\r\n  handleWidth = (e) => {\r\n    const val = e.target.value;\r\n    this.props.handleWidth(val);\r\n  };\r\n\r\n  handleHeight = (e) => {\r\n    const val = e.target.value;\r\n    this.props.handleHeight(val);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography align=''>Grid Size</Typography>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Width\"\r\n                    type=\"number\"\r\n                    defaultValue={30}\r\n                    onChange={this.handleWidth}\r\n                    className={classes.field}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Height\"\r\n                    type=\"number\"\r\n                    defaultValue={30}\r\n                    onChange={this.handleHeight}\r\n                    className={classes.field}\r\n                  />\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            <VizButton\r\n              visualizing={this.props.visualizing}\r\n              handleViz={this.props.handleViz}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const VizAppBar = withStyles(styles)(Component);\r\n","import React from \"react\";\r\nimport { LangstonsAnt } from \"../viz\";\r\nimport { VizAppBar } from \"../layout\";\r\n\r\nexport class View extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isVisualizing: false,\r\n      clickCount: 0,\r\n      gridWidth: 30,\r\n      gridHeight: 30,\r\n    };\r\n    this.handleVisualize = this.handleVisualize.bind(this);\r\n  }\r\n\r\n  handleVisualize = () => {\r\n    this.setState({\r\n      isVisualizing: !this.state.isVisualizing,\r\n      clickCount: this.state.clickCount + 1,\r\n    });\r\n  };\r\n\r\n  handleWidth = (val) => {\r\n    this.setState({\r\n      gridWidth: val,\r\n    });\r\n  };\r\n\r\n  handleHeight = (val) => {\r\n    this.setState({\r\n      gridHeight: val,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { gridWidth, gridHeight } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <VizAppBar\r\n          handleSize={this.handleGridSize}\r\n          handleWidth={this.handleWidth}\r\n          handleHeight={this.handleHeight}\r\n          visualizing={this.state.isVisualizing}\r\n          handleViz={this.handleVisualize}\r\n        />\r\n        <LangstonsAnt\r\n          visualizing={this.state.isVisualizing}\r\n          clickCount={this.state.clickCount}\r\n          handleViz={this.handleVisualize}\r\n          gridSize={[gridWidth, gridHeight]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { View } from \"./views\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <View />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}